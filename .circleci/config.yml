version: 2
jobs:
  test:
    parallelism: 4
    machine:
      image: ubuntu-1604:202004-01
    steps:
      - run:
          name: "Prepare host for installation"
          command: |
            sudo killall apt-get || true
            for service in apt-daily.service apt-daily-upgrade.service unattended-upgrades.service apt-daily.timer apt-daily-upgrade.timer; do
              sudo systemctl stop ${service}
              sudo systemctl kill --kill-who=all ${service} || true
              sudo systemctl disable ${service}
              sudo systemctl mask ${service}
            done
            sudo systemctl daemon-reload
      - run:
          name: "Install required packages"
          command: |
            sudo add-apt-repository -y ppa:projectatomic/ppa
            sudo apt-get update
            sudo apt-get install libkrb5-dev software-properties-common uidmap podman docker-ce
      - checkout
      - run: docker version
      - run: docker info
      - run: podman version
      - run: podman info
      - run: pip install tox zipp==0.5.2 --user
      - run: echo 'export PATH=~/.local/bin:$PATH' >> $BASH_ENV
      - run: cd ~/.local/bin && curl -L https://github.com/openshift/source-to-image/releases/download/v1.1.13/source-to-image-v1.1.13-b54d75d3-linux-amd64.tar.gz | tar xvz
      - run: pyenv local 2.7.17 3.5.9 3.6.10 3.7.7
      - run: echo -e "[registries.search]\nregistries = ['docker.io', 'registry.fedoraproject.org', 'registry.access.redhat.com']" | sudo tee -a /etc/containers/registries.conf
      - run: git config --global user.email "ci@dummy.com" && git config --global user.name "John Doe"
      - run: |
          if [[ "${CIRCLE_NODE_INDEX}" == 0 ]]; then
             make test-py27
          fi
      - run: |
          if [[ "${CIRCLE_NODE_INDEX}" == 1 ]]; then
             make test-py35
          fi
      - run: |
          if [[ "${CIRCLE_NODE_INDEX}" == 2 ]]; then
             make test-py36
          fi
      - run: |
          if [[ "${CIRCLE_NODE_INDEX}" == 3 ]]; then
             make test-py37
          fi

  docs-build:
    machine:
      image: ubuntu-1604:202004-01
    steps:
      - run:
          name: "Prepare host for installation"
          command: |
            sudo killall apt-get || true
            for service in apt-daily.service apt-daily-upgrade.service unattended-upgrades.service apt-daily.timer apt-daily-upgrade.timer; do
              sudo systemctl stop ${service}
              sudo systemctl kill --kill-who=all ${service} || true
              sudo systemctl disable ${service}
              sudo systemctl mask ${service}
            done
            sudo systemctl daemon-reload
      - run:
          name: "Install required packages"
          command: |
            sudo apt-get update
            sudo apt install -y graphviz
      - checkout
      - run:
          name: Install docs dependencies
          command: |
            cd docs
            mkdir -p ./venv
            virtualenv ./venv
            . venv/bin/activate
            pip install -r ../requirements.txt -r requirements.txt
      - run:
          name: Generate documentation
          command: |
            cd docs
            . venv/bin/activate
            make html
      - store_artifacts:
          path: docs/_build

workflows:
  version: 2
  build:
    jobs:
      - test
      - docs-build
