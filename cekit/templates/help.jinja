# `{{ name }}:{{ version }}`

Image help page for the `{{ name }}:{{ version }}` container image.

> This file contains autogenerated content based on the image descriptor.

This image is based on the `{{ from }}` image.

## Description

{{ description }}

## Environment variables

{% if helper.all_envs(image)|count > 0 %}
Environment variables can be divided into two categories:

1. **Configuration environment variables**

    Configuration environment variables are used to configure services inside running container. These
    **do not have** default values in the container image and are supposed to be set at container runtime.

    Environment variables listed below without the *value* section are configuration environment variables.
2. **Environment variables with default values**

    Environment variables with default values are already set in the container image byt he image author.
    Depending on the environment variable it may be possible to customize it, but in many cases
    these are not meant to be modified.

    Environment variables listed below containing the *value* section are configuration environment variables.

{% for env in helper.all_envs(image)|sort(attribute='name', case_sensitive=True) %}
### `{{ env.name }}`

{% if env.description %}
**Description**

{{ env.description }}

{% endif %}
{% if env.value %}
**Value**

{{ env.value }}

{% endif %}
{% if env.example %}
**Example**

    {{ env.example }}

{% endif %}
{% endfor %}
{% else %}
There are no environment variables defined in the image descriptor or modules.
{% endif %}

## Labels

{% if helper.all_labels(image)|count > 0 %}
{% for label in helper.all_labels(image)|sort(attribute='name', case_sensitive=True) %}
### `{{ label.name }}`

**Value**

    {{ label.value }}

{% if label.description %}
**Description**

{{ label.description }}

{% endif %}
{% endfor %}
{% else %}
There are no labels defined in the image descriptor or modules.
{% endif %}

## Container runtime

Container will run as `{{ run.get('user') }}` user.

{% if run.get('entrypoint') %}
Defined entrypoint:

{{ run.entrypoint }}
{% else %}
There is no entrypoint specified for the container.
{% endif %}

{% if run.get('cmd') %}
Command to execute when the container starts:

    {{ run.cmd|join(' ') }}
{% else %}
There is no command specified to run when the container starts.
{% endif %}

{% if run.get('workdir') %}
Defined working directory:

    {{ run.workdir }}
{% else %}
There is no working directory specified.
{% endif %}

### Published ports

{% if ports %}
Following ports are defined in the image:

{% for port in ports %}
* `{{ port.value }}`
    {% if not port.get('expose', True) %}
    > This port **is not** exposed in the container image. Following information is a suggestion
    > to the container user that port `{{ port.value }}` may be used in the container by some service.
    {% endif %}
    {% if port.get('description') %}

    {{ port.description }}
    {% endif %}
    {% if port.get('service') %}

    * Used by {{ port.service }} service
    {% endif %}
    {% if port.get('protocol') %}

    * Using {{ port.protocol }} protocol
    {% endif %}
{%- endfor -%}
{% else %}
There are no defined ports.
{% endif %}

### Volumes

{% if volumes %}
Following volumes are defined in the image:

{% for volume in volumes %}
 * `{{ volume.path }}`
{% endfor %}
{% else %}
There are no volumes defined.
{% endif %}